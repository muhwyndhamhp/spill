// Code generated by templ@v0.2.364 DO NOT EDIT.

package public

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func UsersCompaniesRegister() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		err = DocType().Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		err = Head().Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		err = Body(pageUsersCompaniesRegister()).Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func pageUsersCompaniesRegister() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_2 := templ.GetChildren(ctx)
		if var_2 == nil {
			var_2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<h1>")
		if err != nil {
			return err
		}
		var_3 := `Please add your current employement`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h1><div class=\"p-4 bg-white rounded-xl w-1/3 m-auto shadow-rose-100/50 shadow-2xl\"><h2>")
		if err != nil {
			return err
		}
		var_4 := `Please enter your company name`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h2><form>")
		if err != nil {
			return err
		}
		err = InputField("Company Name", "company_name", "text", "Company Name (Ex. Google, Uber, Netflix)").Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		err = FormButton("/v1/users/companies/upsert").Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</form></div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
